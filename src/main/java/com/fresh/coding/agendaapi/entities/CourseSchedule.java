package com.fresh.coding.agendaapi.entities;

import jakarta.persistence.*;
import lombok.*;

import java.time.DayOfWeek;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.Month;

/**
 * Represents the schedule for a course within the application.
 * This class maps to the 'course_schedule' table in the database.
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@EqualsAndHashCode
@Entity
@Builder
public class CourseSchedule {

    /**
     * The unique identifier for the course schedule.
     * This field is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The course associated with this schedule.
     * This is a many-to-one relationship with the {@link Course} entity.
     * The fetch type is LAZY to optimize performance by loading the course only when needed.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @ToString.Exclude
    private Course course;

    /**
     * The start time of the course schedule.
     */
    private LocalTime startTime;

    /**
     * The end time of the course schedule.
     */
    private LocalTime endTime;

    /**
     * The day of the week when the course is scheduled.
     * Uses the {@link DayOfWeek} enum to represent the day.
     */
    @Enumerated(EnumType.STRING)
    private DayOfWeek dayOfWeek;

    /**
     * The month when the course is scheduled.
     * Uses the {@link Month} enum to represent the month.
     */
    @Enumerated(EnumType.STRING)
    private Month month;

    /**
     * The year when the course is scheduled.
     */
    private Integer year;

    /**
     * The classroom where the course is held.
     * This is a many-to-one relationship with the {@link Classroom} entity.
     * The fetch type is LAZY to optimize performance by loading the classroom only when needed.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @ToString.Exclude
    private Classroom classroom;

    /**
     * The timestamp when the course schedule was created.
     * Automatically set before persisting the entity.
     */
    private LocalDateTime createdAt;

    /**
     * The timestamp when the course schedule was last updated.
     * Automatically updated before updating the entity.
     */
    private LocalDateTime updatedAt;

    /**
     * Sets the creation timestamp to the current time if it is not already set.
     * Also sets the updated timestamp to the current time before persisting the entity.
     */
    @PrePersist
    public void beforeCreate() {
        if (createdAt == null) {
            this.createdAt = LocalDateTime.now();
        }
        if (updatedAt == null) {
            this.updatedAt = LocalDateTime.now();
        }
    }

    /**
     * Updates the timestamp to the current time before updating the entity.
     */
    @PreUpdate
    public void beforeUpdate() {
        this.updatedAt = LocalDateTime.now();
    }
}
